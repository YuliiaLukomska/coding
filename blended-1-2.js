// ---------------------------------------------------Задачки, які треба періодично вирішувати для повторення----------------------------------------------------------
/*
Використовуючи ф-ю if...else, напишіть код, який запитуватиме: "Яка офіційна назва JavaScript?"
Якщо користувач вводить "ECMAScript", то показити через alert: "Вірно!".
Інакше відобразити: "Не знаєте? ECMAScript!"

Алгоритм:
1. Створити функцію
2. Написати умову
3. Викликати функцію вказавши як параметр prompt() - запит, який з'явиться на сайті. Відповідь, яку ти напишеш і буде змінною answer.

*/

/* якщо на prompt() натиснем cancel(відміна), то у answer запишеться null і тоді буде помилка, бо null.toLowerCase... не зможе виконатись.
Тому треба виключити такий випадок і просто вийти з функції якщо користувач натисне cancel:
  if (answer === null) {
  return; }
або додати додаткову умову перевірки (answer !== null).
toLowerCase() і trim() використовуємо щоб нормалізувати відповідь користувача - привести до одного реєстру та обрізати пробіли по боках. */

// function checkAnswer(answer) {
//   if (answer !== null && answer.toLowerCase().trim() === 'ecmascript') {
//     alert('Вірно!');
//   } else {
//     alert('Не знаєте? ECMAScript!');
//   }
// }

// checkAnswer(prompt('Яка офіційна назва JavaScript?'));

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Напиши функцію, яка буде отримувати номер користувача (10 цифр) і повертатиме закодовані перші 6 цифр.
Н-д, якщо номер 0976590822, то ф-я має повертати ******0822.
Алгоритм:
1. Створення функції
2. Ф-я буде приймати як параметр те, що користувач напише в prompt().
3. Вихід з функції, якщо користувач натисне cancel.
4. Обробка відповіді користувача
5. Використання методу slice();
6. Використання методу padStart();
*/

// function markNumber(number) {
//   // console.log(typeof number); // string

//   if (number === null) {
//     return;
//   } else if (number.trim().length < 10 || number.trim().length > 10) {
//     alert('Number length should consist of 10 numbers');
//   } else {
//     const trimNumber = number.slice(-4); // якщо вказуємо від'ємне число, то рахуємо з кінця починаючи з -1 і обрізаємо спереді (див приклад нижче)
//     const markedNumber = trimNumber.padStart(number.length, '*');
//     return markedNumber;
//   }
// }

// console.log(markNumber(prompt('Please, enter your number here')));

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------
// const cardNumber = '12345678910';
// const trimCardNumber = cardNumber.slice(-1);
// const trimCardNumberNew = cardNumber.slice(-5);
// console.log(trimCardNumber); // 0
// console.log(trimCardNumberNew); // 78910
//-------------------------------------------------------------------------------------------------------------------------------------------------------

/**
Напишіть програму, яка отримає від користувача число (кількість хвилин)та виведе в консоль рядок в форматі годин та хвилин.
Н-д: 70 === '01:10'. Викор метод padStart().
Алгоритм:
1. Ми отримуємо хвилини, ділимо ці хвилини на 60, щоб отримати к-ть годин і округлюємо до цілого числа. Далі додаємо спереді 0, якщо к-ть годин буде мати один символ.
2. Щоб отримати к-ть хвилин викор остачу від ділення, перетворюємо її в рядок і додаємо в кінці 0, якщо к-ть хв буде число з одним символом. Щоб не було 01:1, а 01:01. 
3. Робимо шаблонний рядок. 
 */

// function timeTransformation(time) {
//   const hours = String(Math.floor(time / 60)).padStart(2, '0');

//   const minutes = String(time % 60).padStart(2, '0');

//   return `${hours}:${minutes}`;
// }

// const resultTimeTrasformation = timeTransformation(67);
// console.log(resultTimeTrasformation);

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Методи padStart(target length, 'symbol') і padEnd(target length, "symbol") - це методи рядків. Вони додають спереді або ззаді до рядка символи,
// які ти задає як другий параметр. Перший параметр це фінальна довжина твого рядка - на ньому буде базуватись те, ск символів додасться до рядка.

// -----------------------------------------------------------------------------------------------------------------------------------------------------
/*Напишіть цикл, який виводить у консоль всі парні числа від max до min за спаданням.
 */

// function evenNumber(min, max) {
//   for (let i = max; i >= min; i--) {
//     // парні
//     if (i % 2 === 0) {
//       console.log(i);
//     }

//     // непарні
//     // if (i % 2 !== 0) {
//     //   console.log(i);
//     // }
//   }
// }
// evenNumber(1, 19);

// -----------------------------------------------------------------------------------------------------------------------------------------------------

// ти отримуєш хвилини, н-д 4500 хвилин. Тобі треба вивести дні, години, хвилини. Н-д: 3 068 хв = 2 дні 3 години 8 хвилин

// function timeCount(time) {
//   const days = Math.floor(time / 60 / 24);
//   console.log(days); // 2

//   const restHours = Math.floor(time / 60 - days * 24);

//   const restMinutes = (((time / 60 - days * 24) * 60) % 60).toFixed(0);

//   console.log(`${days} days ${restHours} hours ${restMinutes} minutes`);
// }

// console.log(timeCount(3068));

// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* При завантаженні сторінки користувачеві пропонується в prompt ввести число. Введення додається до значення змінної total.
Операція введення числа триває до того часу, поки користувач не натисне кнопку Cancel у prompt.
Після того як користувач припинив введення, натиснувши кнопку Cancel, показати alert з рядком "Загальна сума введених чисел дорівнює (сума)"
Робити перевірку, що користувач ввів саме число, а не довільний набір символів не потрібно.
*/

// function sumCounting(number) {
//   let total = 0;
//   while (number !== null) {
//     total += Number(number);
//     number = prompt('Enter your number');
//   }
//   return alert(`Загальна сума введених чисел дорівнює ${total}`);
// }

// sumCounting(prompt('Enter a number here'));

// --------------------------------------------------------------------------------------------------------------------------------------------------

// function sumCounting(number) {
//   // у випадку циклу do while, коли ти одразу натискаєш cancel, то в параметр number записується null і далі виконується тіло інструкції do
//   // тобто рахується total = 0 + Number(null) --> 0 + 0 = 0 тоді викликається prompt, ти знову клікаєш  cancel, number === null, умова не виконується і цикл зупиняється.
//   // тому доречніше викор цикл while
//   let total = 0;
//   do {
//     total += Number(number);
//     number = prompt('Enter a number');
//   } while (number !== null);

//   return alert(`Sum equals ${total}`);
// }

// sumCounting(prompt('Enter a number'));

// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* Напишіть цикл, який пропонує ввести число більше за 100 через prompt.
Якщо користувач ввів інше число, то попросити ввести число ще раз, і таке інше.
Цикл повинен питати число, поки корист-ч не введе число більше за 100 або не натисне cancel. */

// function checkNumber(number) {
//   while (Number(number) <= 100 && number !== null) {
//     number = prompt('Please, enter a number bigger than 100');
//   }
// }

// checkNumber(prompt('Please, enter a number bigger than 100'));

/* 
За кожен місяць податкова нараховує на ЗП розробника 5% від суми.
Напишіть консольну функцію, на яку користувач вводить суму зп і к-ть місяців 
за доп prompt(), не забуваємо, що промпт повертає рядок.
А податкова обчислює чистий дохід розробника за вказаний період.
Для обчислення суми з урахуванням відсотків використовуйте цикл for.
*/

// function countNettoSalary() {
//   const bruttoSalary = Number(prompt('Enter your brutto salary')); // 50000
//   const monthsAmount = Number(prompt('Enter amount of months')); // 2
//   const bruttoSalaryPerMonth = bruttoSalary / monthsAmount; // 25000

//   let total = 0;

//   for (let month = 1; month <= monthsAmount; month++) {
//     total += bruttoSalaryPerMonth - bruttoSalaryPerMonth * 0.05;
//   }

//   return total; // 47500
// }

// const resultNettoSalary = countNettoSalary();
// console.log(resultNettoSalary);

// верхню задачку трохи виправити, бо в промпт ми будемо вводити одразу брутто зп за місяць

/*
Напишіть код, який запитуватиме логін за доп промпт та логувати результат у консоль браузера.
Якщо користувач вводить "Адмін", то промпт запитує пароль. Якщо нічого не ввели або натиснуто клавішу Esc - вивести рядок "Скасовано".
В іншому випадку вивести рядок "Я вас не знаю".
Пароль перевіряти так: Якщо введено пароль "Я головний", то вивести рядок "Привіт", інакше виводити рядк "Невірний пароль!"
*/

// function checkLogin() {
//   const login = prompt('Enter your login here');
//   console.log(login);
//   if (login === 'Адмін') {
//     const password = prompt('Enter your password');
//     if (password === 'Я головний') {
//       alert('Привіт');
//     } else {
//       console.log('Невірний пароль');
//     }
//   } else if (login === null || login.trim() === '') {
//     console.log('Скасовано');
//   } else {
//     console.log('Я вас не знаю');
//   }
// }

// checkLogin();

// if (login === null || login.trim() === '') - цей рядок варто скоротити до if(!login)
